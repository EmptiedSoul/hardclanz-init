#!/bin/bash

. /etc/rc.d/lib/functions.sh

require_root(){
	[[ $UID == "0" ]] || { echo "service: must be superuser"; exit 0; }
}

get_service_status(){
	[[ -e "/run/service/$1" ]] || { echo -e "[ \e[1;34mdisabled\e[0m ] $1"; return; }
	[[ -e "/run/service/$1/stopped" ]] && { echo -e "[ \e[1;33mstopped\e[0m  ] $1"; return; }
	local status="$(cat /run/service/$1/status)"
	case $status in
		run*)		echo -e "[ \e[1;32mrunning\e[0m ] $1";;
		exited=0*)	echo -e "[  \e[1;32mexited\e[0m  ] $1";;
		kill*)		echo -e "[  \e[1;31mkilled\e[0m  ] $1";;
		stop*)		echo -e "[ \e[1;33mstopped\e[0m  ] $1";;
		*)		echo -e "[  \e[1;31mfailed\e[0m  ] $1";;
	esac
}
case $1 in
	list)	ls /etc/init.d;;
	status)	[[ -z "$2" ]] || { get_service_status $2; exit; }
		{
			for service in $(ls -1 /etc/init.d)
			do
				case $service in
					stop_*|sendsignals|halt|reboot) continue;;
				esac
				get_service_status $service
			done
			unset service
		};;
	start)
		require_root
		pushd /etc/rc.d &>/dev/null
			make -s $2 -j && {
				rm -f /run/service/$2/stopped &>/dev/null
			}
		popd &>/dev/null;;
	stop)
		require_root
		[[ -e /etc/init.d/stop_$2 ]] && {
			/etc/init.d/stop_$2 && \
				{ msg_ok "Stopped $2" 
					touch /run/service/$2/stopped	
				} || \
				msg_fail "Failed to stop $2"
			exit 0;
		}
		pid="$(cat /run/service/$2/supervisor)"
		kill -15 $pid &>/dev/null || echo "service: unable to kill"
		touch /run/service/$2/stopped
		;;
	reload)
		require_root
		pid="$(cat /run/service/$2/supervisor)"
		kill -HUP $pid || echo "service: unable to reload"
		;;
	restart)
		$0 stop $2 && $0 start $2;;
	get-supervisor)
		echo "$(cat /run/service/$2/supervisor)";;
	get-pid)
		echo "$(cat /run/service/$2/pid)";;
	is-running)
		[[ -e "/run/service/$2" ]] || { exit 1; }
		[[ -e "/run/service/$2/stopped" ]] && exit 1
		status="$(cat /run/service/$2/status)"
		case $status in
			run*)		exit 0;;
			exited=0*)	exit 0;;
			kill*)		exit 1;;
			*)		exit 1;;
		esac
		;;
	rc-recompile)
		require_root
		cd /etc/rc.d
		hdcompile init.d > Makefile
		;;
	enable)
		require_root
		service="$2"
		runlevel="$3"
		{ [[ -z "$service" ]] || [[ -z "$runlevel" ]]; } && \
			{ echo "Usage: ${0##*/} enable <service> <0-6,S>"; exit 1; }
		[[ -e "/etc/init.d/$service" ]] || \
			{ echo "$service: no such service"; exit 1; }
		case $runlevel in
			[0-6]|S) true;;
			*) echo "Usage: ${0##*/} enable <service> <0-6,S>" && exit 1;;
		esac
		grep -q $service /etc/rc.d/$runlevel/depends && \
			{ echo "$service: already enabled"; exit 1; }
		echo $service >> /etc/rc.d/$runlevel/depends
		$0 rc-recompile
		;;
	disable)
		require_root
		service="$2"
		runlevel="$3"
		{ [[ -z "$service" ]] || [[ -z "$runlevel" ]]; } && \
			{ echo "Usage: ${0##*/} disable <service> <0-6,S>"; exit 1; }
		[[ -e "/etc/init.d/$service" ]] || \
			{ echo "$service: no such service"; exit 1; }
		case $runlevel in
			[0-6]|S) true;;
			*) echo "Usage: ${0##*/} disable <service> <0-6,S>" && exit 1;;
		esac
		grep -q $service /etc/rc.d/$runlevel/depends || \
			{ echo "$service: already disabled"; exit 1; }
		sed -i "/$service/d" /etc/rc.d/$runlevel/depends
		$0 rc-recompile
		;;
	info)
		service="$2"
		[[ -e /etc/init.d/$service ]] || {
			echo "$service: no such service"
			exit 1;
		}
		echo "* $service - $(awk '/# rc: description:/ { $1=$2=$3=""; print $0; }' /etc/init.d/$service)"
		[[ -e /run/service/$service ]] && {
			echo -e "\tStatus: $(cat /run/service/$service/status)"
			echo -e "\tSupervisor opts: $(awk '/# rc: hd-opts:/ { $1=$2=$3=""; print $0; }' /etc/init.d/$service)"
			echo -e "\tDepends: $(awk '/# rc: depends:/ { $1=$2=$3=""; print $0; }' /etc/init.d/$service)"
		}
		[[ -e /run/service/$service/pid ]] && {
			echo -e "\tMain PID: $(cat /run/service/$service/pid)"
			echo -e "\tSupervisor PID: $(cat /run/service/$)"
			echo -e "\tRunning since: $(date --date=\"@$(stat /run/service/$service/pid -c '%Y')\")"
			echo -e "\tSupervising since: $(date --date=\"@$(stat /run/service/$service/supervisor -c '%Y')\")"
		}
		tail /var/log/service/$service.log
esac

exit	



















